<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rtc:RtcProfile rtc:version="0.2" rtc:id="RTC:Masatu Tatekawa:Filter:OrientationFilter:1.0.0" xmlns:rtcExt="http://www.openrtp.org/namespaces/rtc_ext" xmlns:rtcDoc="http://www.openrtp.org/namespaces/rtc_doc" xmlns:rtc="http://www.openrtp.org/namespaces/rtc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <rtc:BasicInfo xsi:type="rtcExt:basic_info_ext" rtcExt:saveProject="OrientationFilter" rtc:updateDate="2013-11-24T23:08:48.812+09:00" rtc:creationDate="2013-11-19T06:27:38+09:00" rtc:abstract="RTM on Androidを用いたアプリケーション「GetOrientation」から出力されるデータを実用しやすい形式へと変換するフィルタコンポーネント" rtc:version="1.0.0" rtc:vendor="Masatu Tatekawa" rtc:maxInstances="1" rtc:executionType="PeriodicExecutionContext" rtc:executionRate="1000.0" rtc:description="Filtering of the OrientationSensor information" rtc:category="Filter" rtc:componentKind="DataFlowComponent" rtc:activityType="PERIODIC" rtc:componentType="UNIQUE" rtc:name="OrientationFilter">
        <rtcDoc:Doc rtcDoc:reference="" rtcDoc:license="" rtcDoc:creator="Masaru Tatekawa&lt;br/&gt;ma13055@shibaura-it.ac.jp" rtcDoc:algorithm="" rtcDoc:inout="In:OrientationSensorData&lt;br/&gt;Port1:Yaw data (TimedDouble)&lt;br/&gt;Port2:Pitch data (TimedDouble)&lt;br/&gt;Port3:Roll data (TimedDouble)&lt;br/&gt;out:FilteredData&lt;br/&gt;Port1:Three data Roll, Pitch, and Yaw (TimedOrientation3D)(degree)&lt;br/&gt;Port2:Three data Roll, Pitch, and Yaw (TimedOrientation3D)(rad)&lt;br/&gt;Port3:Roll data (TimedDouble)&lt;br/&gt;Port4:Pitch data (TimedDouble)&lt;br/&gt;Port5:Yaw data (TimedDouble)&lt;br/&gt;Port6:Three data Roll, Pitch, and Yaw(TimedDoubelSeq)&lt;br/&gt;Port7:Roll data (TimedFloat)&lt;br/&gt;Port8:Pitch data (TimedFloat)&lt;br/&gt;Port9:Yaw data (TimedFloat)&lt;br/&gt;Port10:Three data Roll, Pitch, and Yaw(TimedFloatSeq)" rtcDoc:description="Androidセンサ取得用アプリケーション「GetOrientation」に対応するフィルタコンポーネント限定された型でしか送信することのできないセンサ情報に対し、OrientationSensorに適したデータ型に変換して出力を行う。&lt;br/&gt;センサ情報にノイズなどが乗りやすい場合には、ある程度の値の丸めを行うことができ、センサの値の基準値０を現在のセンサ値に置き換えて出力することができる。&lt;br/&gt;入力ポートに入ってくる情報を、テキストファイルに出力することができ、そのテキストファイルを読み込むことで、Android端末との通信を行っていない状態でも、擬似的にセンサ値を取得しているように出力することができる。"/>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
    </rtc:BasicInfo>
    <rtc:Actions>
        <rtc:OnInitialize xsi:type="rtcDoc:action_status_doc" rtc:implemented="true"/>
        <rtc:OnFinalize xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnStartup xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnShutdown xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnActivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="2:If configTextName is inputted." rtcDoc:description="1:Start time of execution is initialized.&lt;br/&gt;2:Read/write processing of files."/>
        </rtc:OnActivated>
        <rtc:OnDeactivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="If is reading a text file." rtcDoc:description="Variable for reading file is initialized."/>
        </rtc:OnDeactivated>
        <rtc:OnAborting xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnError xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnReset xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnExecute xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="1 : Default setting.&lt;br/&gt;2 : If is reading a text file.&lt;br/&gt;3 : Default setting.&lt;br/&gt;4 : if the check box is checked." rtcDoc:description="1 : Write data of InPort to textfile. And the data is outputted to OutPort.&lt;br/&gt;2 : It writes to OutPort periodically external data.(If output data is EOF, rewrite output data to final sensor value.)&lt;br/&gt;3 : Rounding of the input data.&lt;br/&gt;4 : Output of error from the baseline."/>
        </rtc:OnExecute>
        <rtc:OnStateUpdate xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnRateChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnAction xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnModeChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
    </rtc:Actions>
    <rtc:ConfigurationSet>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="configTextName" rtc:unit="" rtc:defaultValue="null" rtc:type="string" rtc:name="ImportTextName">
            <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="File name you want to load." rtcDoc:defaultValue="null" rtcDoc:dataname="configTextName"/>
            <rtcExt:Properties rtcExt:value="text" rtcExt:name="__widget__"/>
        </rtc:Configuration>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="configBaseline" rtc:unit="" rtc:defaultValue="0" rtc:type="int" rtc:name="ChangedOfBaseline">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:Or>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>0</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>1</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                    </rtc:Or>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="Change the baseline of the sensor to current value." rtcDoc:defaultValue="0" rtcDoc:dataname="configBaseline"/>
            <rtcExt:Properties rtcExt:value="radio" rtcExt:name="__widget__"/>
        </rtc:Configuration>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="configRounding" rtc:unit="" rtc:defaultValue="1" rtc:type="int" rtc:name="VariableToRounding">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:propertyIsGreaterThan rtc:matchCase="false">
                        <rtc:Literal>0</rtc:Literal>
                    </rtc:propertyIsGreaterThan>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:range="x&gt;0" rtcDoc:unit="" rtcDoc:description="Variable rounding of input data.&lt;br/&gt;Sensor sensitivity reduces variable increases." rtcDoc:defaultValue="1" rtcDoc:dataname="configRounding"/>
            <rtcExt:Properties rtcExt:value="text" rtcExt:name="__widget__"/>
        </rtc:Configuration>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="PitchTime" rtc:unit="msec" rtc:defaultValue="1000" rtc:type="int" rtc:name="PitchTime">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:propertyIsGreaterThanOrEqualTo rtc:matchCase="false">
                        <rtc:Literal>0</rtc:Literal>
                    </rtc:propertyIsGreaterThanOrEqualTo>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:range="0 &lt;= x" rtcDoc:unit="msec" rtcDoc:description="cycle of the read mode." rtcDoc:defaultValue="1000" rtcDoc:dataname="int"/>
            <rtcExt:Properties rtcExt:value="text" rtcExt:name="__widget__"/>
        </rtc:Configuration>
    </rtc:ConfigurationSet>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="inDataX" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDouble" rtc:name="InTimedDoubleDataYaw" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="uT" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedDouble" rtcDoc:description="Output dataX from &quot;GetMagneticField&quot; is input."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="inDataY" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDouble" rtc:name="InTimedDoubleDataPitch" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="uT" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedDouble" rtcDoc:description="Output dataY from &quot;GetMagneticField&quot; is input."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="inDataZ" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDouble" rtc:name="InTimedDoubleDataRoll" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="uT" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedDouble" rtcDoc:description="Output dataZ from &quot;GetMagneticField&quot; is input."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outDegree3D" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedOrientation3D" rtc:name="OutTimedOrientationDegree3D" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedOrientation3D" rtcDoc:description="Orientation sensor data in the Roll , Pitch and Yaw of the filtered are output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outRad3D" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedOrientation3D" rtc:name="OutTimedOrientationRad3D" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="rad" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedOrientation3D" rtcDoc:description="Orientation sensor data in the Roll , Pitch and Yaw of the filtered are output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outDoublePitch" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDouble" rtc:name="OutTimedDoubleDataRoll" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedDouble" rtcDoc:description="Orientation sensor data Roll of the filtered is output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="OutDoublePitch" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDouble" rtc:name="OutTimedDoubleDataPitch" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedDouble" rtcDoc:description="Orientation sensor data Pitch of the filtered is output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="OutDoubleYaw" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDouble" rtc:name="OutTimedDoubleDataYaw" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedDouble" rtcDoc:description="Orientation sensor data Yaw of the filtered is output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outDoubleSeq" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedDoubleSeq" rtc:name="OutTimedDoubleSeq" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="3" rtcDoc:type="TimedDoubleSeq" rtcDoc:description="Orientation sensor data in the Roll , Pitch and Yaw of the filtered are output.&lt;br/&gt;seq[0] = dataRoll&lt;br/&gt;seq[1] = dataPitch&lt;br/&gt;seq[2] = dataYaw"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outFloatRoll" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedFloat" rtc:name="OutTimedFloatDataRoll" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedFloat" rtcDoc:description="Orientation sensor data Roll of the filtered is output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outFloatPitch" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedFloat" rtc:name="OutTimedFloatDataPitch" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedFloat" rtcDoc:description="Orientation sensor data Pitch of the filtered is output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outFloatYaw" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedFloat" rtc:name="OutTimedFloatDataYaw" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="1" rtcDoc:type="TimedFloat" rtcDoc:description="Orientation sensor data Yaw of the filtered is output."/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="outFloatSeq" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedFloatSeq" rtc:name="OutTimedFloatSeq" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="degree" rtcDoc:semantics="" rtcDoc:number="3" rtcDoc:type="TimedFloatSeq" rtcDoc:description="Orientation sensor data in the Roll , Pitch and Yaw of the filtered are output.&lt;br/&gt;seq[0] = dataRoll&lt;br/&gt;seq[1] = dataPitch&lt;br/&gt;seq[2] = dataYaw"/>
    </rtc:DataPorts>
    <rtc:Language xsi:type="rtcExt:language_ext" rtc:kind="Java"/>
</rtc:RtcProfile>
